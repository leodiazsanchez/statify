{"ast":null,"code":"import { redirectToAuthCodeFlow, getAccessToken } from \"./authCodeWithPkce\";\nconst clientId = \"e5f9bfa9d40447488e4fc74d2c71d293\";\nconst params = new URLSearchParams(window.location.search);\nconst code = params.get(\"code\");\nexport async function checkAuth() {\n  if (code) {\n    const accessToken = await getAccessToken(clientId, code);\n    const profile = await fetchProfile(accessToken);\n    sessionStorage.setItem(\"profile\", JSON.stringify(profile));\n    localStorage.setItem(\"accessToken\", accessToken);\n  }\n}\nexport async function handleLogin() {\n  if (!code) {\n    redirectToAuthCodeFlow(clientId);\n  }\n}\nexport async function auth() {\n  if (!code) {\n    redirectToAuthCodeFlow(clientId);\n  } else {\n    const accessToken = await getAccessToken(clientId, code);\n    const profile = await fetchProfile(accessToken);\n  }\n}\nexport function handleLogout() {\n  localStorage.removeItem(\"verifier\");\n  localStorage.removeItem(\"access_token\"); // If you store access token in localStorage\n  sessionStorage.removeItem(\"profile\");\n  code = null;\n  window.location.href = \"/\"; // Redirect to homepage or login page\n}\nasync function fetchSpotify(token, url) {\n  const result = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return await result.json();\n}\nexport async function fetchProfile(token) {\n  const url = \"https://api.spotify.com/v1/me/\";\n  return await fetchSpotify(token, url);\n}\nexport async function fetchArtists(token) {\n  const url = \"https://api.spotify.com/v1/me/top/artists\";\n  return await fetchSpotify(token, url);\n}","map":{"version":3,"names":["redirectToAuthCodeFlow","getAccessToken","clientId","params","URLSearchParams","window","location","search","code","get","checkAuth","accessToken","profile","fetchProfile","sessionStorage","setItem","JSON","stringify","localStorage","handleLogin","auth","handleLogout","removeItem","href","fetchSpotify","token","url","result","fetch","method","headers","Authorization","json","fetchArtists"],"sources":["C:/Users/Leo/Documents/learningts/my-app/src/scripts/auth.ts"],"sourcesContent":["import { redirectToAuthCodeFlow, getAccessToken } from \"./authCodeWithPkce\";\r\n\r\nconst clientId = \"e5f9bfa9d40447488e4fc74d2c71d293\";\r\nconst params = new URLSearchParams(window.location.search);\r\nconst code = params.get(\"code\");\r\n\r\nexport async function checkAuth() {\r\n  if (code) {\r\n    const accessToken = await getAccessToken(clientId, code);\r\n    const profile = await fetchProfile(accessToken);\r\n    sessionStorage.setItem(\"profile\", JSON.stringify(profile));\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n  }\r\n}\r\n\r\nexport async function handleLogin() {\r\n  if (!code) {\r\n    redirectToAuthCodeFlow(clientId);\r\n  }\r\n}\r\n\r\nexport async function auth() {\r\n  if (!code) {\r\n    redirectToAuthCodeFlow(clientId);\r\n  } else {\r\n    const accessToken = await getAccessToken(clientId, code);\r\n    const profile = await fetchProfile(accessToken);\r\n  }\r\n}\r\n\r\nexport function handleLogout() {\r\n  localStorage.removeItem(\"verifier\");\r\n  localStorage.removeItem(\"access_token\"); // If you store access token in localStorage\r\n  sessionStorage.removeItem(\"profile\");\r\n  code = null;\r\n  window.location.href = \"/\"; // Redirect to homepage or login page\r\n}\r\n\r\nasync function fetchSpotify(token: string, url: string): Promise<any> {\r\n    const result = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  \r\n    return await result.json();\r\n  }\r\n\r\nexport async function fetchProfile(token: string): Promise<any> {\r\n  const url = \"https://api.spotify.com/v1/me/\";\r\n\r\n  return await fetchSpotify(token, url);\r\n}\r\n\r\nexport async function fetchArtists(token: string): Promise<any> {\r\n  const url = \"https://api.spotify.com/v1/me/top/artists\";\r\n\r\n  return await fetchSpotify(token, url);\r\n}\r\n"],"mappings":"AAAA,SAASA,sBAAsB,EAAEC,cAAc,QAAQ,oBAAoB;AAE3E,MAAMC,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;AAC1D,MAAMC,IAAI,GAAGL,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC;AAE/B,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,IAAIF,IAAI,EAAE;IACR,MAAMG,WAAW,GAAG,MAAMV,cAAc,CAACC,QAAQ,EAAEM,IAAI,CAAC;IACxD,MAAMI,OAAO,GAAG,MAAMC,YAAY,CAACF,WAAW,CAAC;IAC/CG,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC;IAC1DM,YAAY,CAACH,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;EAClD;AACF;AAEA,OAAO,eAAeQ,WAAWA,CAAA,EAAG;EAClC,IAAI,CAACX,IAAI,EAAE;IACTR,sBAAsB,CAACE,QAAQ,CAAC;EAClC;AACF;AAEA,OAAO,eAAekB,IAAIA,CAAA,EAAG;EAC3B,IAAI,CAACZ,IAAI,EAAE;IACTR,sBAAsB,CAACE,QAAQ,CAAC;EAClC,CAAC,MAAM;IACL,MAAMS,WAAW,GAAG,MAAMV,cAAc,CAACC,QAAQ,EAAEM,IAAI,CAAC;IACxD,MAAMI,OAAO,GAAG,MAAMC,YAAY,CAACF,WAAW,CAAC;EACjD;AACF;AAEA,OAAO,SAASU,YAAYA,CAAA,EAAG;EAC7BH,YAAY,CAACI,UAAU,CAAC,UAAU,CAAC;EACnCJ,YAAY,CAACI,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;EACzCR,cAAc,CAACQ,UAAU,CAAC,SAAS,CAAC;EACpCd,IAAI,GAAG,IAAI;EACXH,MAAM,CAACC,QAAQ,CAACiB,IAAI,GAAG,GAAG,CAAC,CAAC;AAC9B;AAEA,eAAeC,YAAYA,CAACC,KAAa,EAAEC,GAAW,EAAgB;EAClE,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAC9BG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAC9C,CAAC,CAAC;EAEF,OAAO,MAAME,MAAM,CAACK,IAAI,CAAC,CAAC;AAC5B;AAEF,OAAO,eAAenB,YAAYA,CAACY,KAAa,EAAgB;EAC9D,MAAMC,GAAG,GAAG,gCAAgC;EAE5C,OAAO,MAAMF,YAAY,CAACC,KAAK,EAAEC,GAAG,CAAC;AACvC;AAEA,OAAO,eAAeO,YAAYA,CAACR,KAAa,EAAgB;EAC9D,MAAMC,GAAG,GAAG,2CAA2C;EAEvD,OAAO,MAAMF,YAAY,CAACC,KAAK,EAAEC,GAAG,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}