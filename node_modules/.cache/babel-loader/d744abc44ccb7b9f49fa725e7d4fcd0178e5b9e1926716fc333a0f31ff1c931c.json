{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leo\\\\Documents\\\\learningts\\\\my-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"./App.css\";\nimport Navbar from \"./compontents/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst runOnLoad = () => {\n  console.log(\"Component has been loaded\");\n};\nfunction App() {\n  _s();\n  // Use the useEffect hook to run the script when the component is loaded\n  useEffect(() => {\n    runOnLoad();\n  }, []); // The empty dependency array ensures this runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Navbar","jsxDEV","_jsxDEV","runOnLoad","console","log","App","_s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Leo/Documents/learningts/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"./App.css\";\n\nimport Navbar from \"./compontents/Navbar\";\n\nconst runOnLoad = () => {\n  console.log(\"Component has been loaded\");\n}\n\nfunction App() {\n\n  // Use the useEffect hook to run the script when the component is loaded\n  useEffect(() => {\n    runOnLoad();\n  }, []); // The empty dependency array ensures this runs only once when the component mounts\n\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,sCAAsC;AAC7C,OAAO,8CAA8C;AACrD,OAAO,oCAAoC;AAC3C,OAAO,oCAAoC;AAC3C,OAAO,WAAW;AAElB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;AAC1C,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACAR,SAAS,CAAC,MAAM;IACdI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACED,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBP,OAAA,CAACF,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACN,EAAA,CAZQD,GAAG;AAAAQ,EAAA,GAAHR,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}