{"ast":null,"code":"export const clientId = \"e5f9bfa9d40447488e4fc74d2c71d293\";\nexport let accessTokenTime;\nexport let profile = {\n  country: \"\",\n  display_name: \"\",\n  email: \"\",\n  explicit_content: {\n    filter_enabled: false,\n    filter_locked: false\n  },\n  external_urls: {\n    spotify: \"\"\n  },\n  followers: {\n    href: \"\",\n    total: 0\n  },\n  href: \"\",\n  id: \"\",\n  images: [],\n  product: \"\",\n  type: \"\",\n  uri: \"\"\n};\nexport async function redirectToAuthCodeFlow(clientId) {\n  const verifier = generateCodeVerifier(128);\n  const challenge = await generateCodeChallenge(verifier);\n  localStorage.setItem(\"verifier\", verifier);\n  const params = new URLSearchParams();\n  params.append(\"client_id\", clientId);\n  params.append(\"response_type\", \"code\");\n  params.append(\"redirect_uri\", \"http://localhost:3000/callback\");\n  params.append(\"scope\", \"user-read-private user-read-email user-top-read\");\n  params.append(\"code_challenge_method\", \"S256\");\n  params.append(\"code_challenge\", challenge);\n  document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n}\nexport async function getAccessToken(clientId, code) {\n  const verifier = localStorage.getItem(\"verifier\");\n  const params = new URLSearchParams();\n  params.append(\"client_id\", clientId);\n  params.append(\"grant_type\", \"authorization_code\");\n  params.append(\"code\", code);\n  params.append(\"redirect_uri\", \"http://localhost:3000/callback\");\n  params.append(\"code_verifier\", verifier);\n  const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: params\n  });\n  const {\n    access_token\n  } = await result.json();\n  return access_token;\n}\nfunction generateCodeVerifier(length) {\n  let text = '';\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\nasync function generateCodeChallenge(codeVerifier) {\n  const data = new TextEncoder().encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\n  return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)])).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport function setTime(time) {\n  accessTokenTime = time;\n}\nexport function setProfile(profile) {\n  this.profile = profile;\n}\nexport function getProfile() {\n  return profile;\n}\nconst oneHourInMilliseconds = 60 * 60 * 1000;\n\n// Get the current time in milliseconds\nconst currentTimeInMilliseconds = Date.now();\nexport function isVaildToken() {\n  if (currentTimeInMilliseconds - accessTokenTime > oneHourInMilliseconds) {\n    console.log(currentTimeInMilliseconds - accessTokenTime > oneHourInMilliseconds);\n    return true;\n  }\n  return false;\n}\nexport function logout() {\n  localStorage.removeItem(\"accessToken\");\n}","map":{"version":3,"names":["clientId","accessTokenTime","profile","country","display_name","email","explicit_content","filter_enabled","filter_locked","external_urls","spotify","followers","href","total","id","images","product","type","uri","redirectToAuthCodeFlow","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","params","URLSearchParams","append","document","location","toString","getAccessToken","code","getItem","result","fetch","method","headers","body","access_token","json","length","text","possible","i","charAt","Math","floor","random","codeVerifier","data","TextEncoder","encode","digest","window","crypto","subtle","btoa","String","fromCharCode","apply","Uint8Array","replace","setTime","time","setProfile","getProfile","oneHourInMilliseconds","currentTimeInMilliseconds","Date","now","isVaildToken","console","log","logout","removeItem"],"sources":["C:/Users/Leo/Documents/learningts/my-app/src/scripts/authCodeWithPkce.ts"],"sourcesContent":["export const clientId = \"e5f9bfa9d40447488e4fc74d2c71d293\";\r\nexport let accessTokenTime;\r\nexport let profile : UserProfile = {\r\n    country: \"\",\r\n    display_name: \"\",\r\n    email: \"\",\r\n    explicit_content: {\r\n        filter_enabled: false,\r\n        filter_locked: false\r\n    },\r\n    external_urls: { spotify: \"\" },\r\n    followers: { href: \"\", total: 0 },\r\n    href: \"\",\r\n    id: \"\",\r\n    images: [],\r\n    product: \"\",\r\n    type: \"\",\r\n    uri: \"\"\r\n};\r\n\r\nexport async function redirectToAuthCodeFlow(clientId: string) {\r\n    const verifier = generateCodeVerifier(128);\r\n    const challenge = await generateCodeChallenge(verifier);\r\n\r\n    localStorage.setItem(\"verifier\", verifier);\r\n\r\n    const params = new URLSearchParams();\r\n    params.append(\"client_id\", clientId);\r\n    params.append(\"response_type\", \"code\");\r\n    params.append(\"redirect_uri\", \"http://localhost:3000/callback\");\r\n    params.append(\"scope\", \"user-read-private user-read-email user-top-read\");\r\n    params.append(\"code_challenge_method\", \"S256\");\r\n    params.append(\"code_challenge\", challenge);\r\n\r\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\r\n}\r\n\r\nexport async function getAccessToken(clientId: string, code: string) {\r\n    const verifier = localStorage.getItem(\"verifier\");\r\n\r\n    const params = new URLSearchParams();\r\n    params.append(\"client_id\", clientId);\r\n    params.append(\"grant_type\", \"authorization_code\");\r\n    params.append(\"code\", code);\r\n    params.append(\"redirect_uri\", \"http://localhost:3000/callback\");\r\n    params.append(\"code_verifier\", verifier!);\r\n\r\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: params\r\n    });\r\n\r\n    const { access_token } = await result.json();\r\n    return access_token;\r\n}\r\n\r\nfunction generateCodeVerifier(length: number) {\r\n    let text = '';\r\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n\r\nasync function generateCodeChallenge(codeVerifier: string) {\r\n    const data = new TextEncoder().encode(codeVerifier);\r\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\r\n    return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)]))\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_')\r\n        .replace(/=+$/, '');\r\n}\r\n\r\nexport function setTime(time) : void {\r\n    accessTokenTime = time;\r\n}\r\n\r\nexport function setProfile(profile : UserProfile) : void {\r\n    this.profile = profile;\r\n}\r\n\r\nexport function getProfile() {\r\n    return profile;\r\n}\r\n\r\nconst oneHourInMilliseconds: number = 60 * 60 * 1000;\r\n\r\n// Get the current time in milliseconds\r\nconst currentTimeInMilliseconds = Date.now();\r\n\r\nexport function isVaildToken() : boolean {\r\n    if (currentTimeInMilliseconds - accessTokenTime > oneHourInMilliseconds) {\r\n        console.log(currentTimeInMilliseconds - accessTokenTime > oneHourInMilliseconds)\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(\"accessToken\");\r\n}\r\n\r\nexport interface UserProfile {\r\n    country: string;\r\n    display_name: string;\r\n    email: string;\r\n    explicit_content: {\r\n        filter_enabled: boolean,\r\n        filter_locked: boolean\r\n    },\r\n    external_urls: { spotify: string; };\r\n    followers: { href: string; total: number; };\r\n    href: string;\r\n    id: string;\r\n    images: Image[];\r\n    product: string;\r\n    type: string;\r\n    uri: string;\r\n}\r\n\r\ninterface Image {\r\n    url: string;\r\n    height: number;\r\n    width: number;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}